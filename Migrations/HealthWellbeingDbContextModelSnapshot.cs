// <auto-generated />
using HealthWellbeing.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthWellbeing.Migrations
{
    [DbContext(typeof(HealthWellbeingDbContext))]
    partial class HealthWellbeingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeneficioTipoExercicio", b =>
                {
                    b.Property<int>("BeneficiosBeneficioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoExercicioId")
                        .HasColumnType("int");

                    b.HasKey("BeneficiosBeneficioId", "TipoExercicioId");

                    b.HasIndex("TipoExercicioId");

                    b.ToTable("BeneficioTipoExercicio");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Alergia", b =>
                {
                    b.Property<int>("AlergiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlergiaID"));

                    b.Property<int?>("AlimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gravidade")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sintomas")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("AlergiaID");

                    b.HasIndex("AlimentoId");

                    b.ToTable("Alergia");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Alimento", b =>
                {
                    b.Property<int>("AlimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlimentoId"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaAlimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GorduraGPor100g")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HidratosGPor100g")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KcalPor100g")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProteinaGPor100g")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AlimentoId");

                    b.HasIndex("CategoriaAlimentoId");

                    b.ToTable("Alimento");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Beneficio", b =>
                {
                    b.Property<int>("BeneficioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficioId"));

                    b.Property<string>("DescricaoBeneficio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NomeBeneficio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BeneficioId");

                    b.ToTable("Beneficio");
                });

            modelBuilder.Entity("HealthWellbeing.Models.CategoriaAlimento", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaID");

                    b.ToTable("CategoriaAlimento");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Exercicio", b =>
                {
                    b.Property<int>("ExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExercicioId"));

                    b.Property<double>("CaloriasGastas")
                        .HasColumnType("float");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duracao")
                        .HasColumnType("float");

                    b.Property<string>("EquipamentoNecessario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExercicioNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instrucoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Intencidade")
                        .HasColumnType("int");

                    b.Property<int>("Repeticoes")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.HasKey("ExercicioId");

                    b.ToTable("Exercicio");
                });

            modelBuilder.Entity("HealthWellbeing.Models.GrupoMuscular", b =>
                {
                    b.Property<int>("GrupoMuscularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupoMuscularId"));

                    b.Property<int?>("ExercicioId")
                        .HasColumnType("int");

                    b.Property<string>("GrupoMuscularNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LocalizacaoCorporal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Musculo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GrupoMuscularId");

                    b.HasIndex("ExercicioId");

                    b.ToTable("GrupoMuscular");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Receita", b =>
                {
                    b.Property<int>("ReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceitaId"));

                    b.Property<decimal>("CaloriasPorPorcao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Gorduras")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HidratosCarbono")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsLactoseFree")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegetariana")
                        .HasColumnType("bit");

                    b.Property<string>("ModoPreparo")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Porcoes")
                        .HasColumnType("int");

                    b.Property<decimal>("Proteinas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TempoPreparo")
                        .HasColumnType("int");

                    b.HasKey("ReceitaId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("HealthWellbeing.Models.RestricaoAlimentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gravidade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sintomas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RestricaoAlimentar");
                });

            modelBuilder.Entity("HealthWellbeing.Models.TipoExercicio", b =>
                {
                    b.Property<int>("TipoExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoExercicioId"));

                    b.Property<string>("CaracteristicasTipoExercicios")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescricaoTipoExercicios")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NomeTipoExercicios")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoExercicioId");

                    b.ToTable("TipoExercicio");
                });

            modelBuilder.Entity("BeneficioTipoExercicio", b =>
                {
                    b.HasOne("HealthWellbeing.Models.Beneficio", null)
                        .WithMany()
                        .HasForeignKey("BeneficiosBeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthWellbeing.Models.TipoExercicio", null)
                        .WithMany()
                        .HasForeignKey("TipoExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HealthWellbeing.Models.Alergia", b =>
                {
                    b.HasOne("HealthWellbeing.Models.Alimento", "Alimento")
                        .WithMany("AlergiasRelacionadas")
                        .HasForeignKey("AlimentoId");

                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Alimento", b =>
                {
                    b.HasOne("HealthWellbeing.Models.CategoriaAlimento", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaAlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("HealthWellbeing.Models.GrupoMuscular", b =>
                {
                    b.HasOne("HealthWellbeing.Models.Exercicio", null)
                        .WithMany("GrupoMuscular")
                        .HasForeignKey("ExercicioId");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Alimento", b =>
                {
                    b.Navigation("AlergiasRelacionadas");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Exercicio", b =>
                {
                    b.Navigation("GrupoMuscular");
                });
#pragma warning restore 612, 618
        }
    }
}
