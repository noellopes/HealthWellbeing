// <auto-generated />
using System;
using HealthWellbeing.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthWellbeing.Migrations
{
    [DbContext(typeof(HealthWellbeingDbContext))]
    [Migration("20251028121758_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthWellBeing.Models.Exame", b =>
                {
                    b.Property<int>("ExameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExameId"));

                    b.Property<DateTime>("DataHoraMarcacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("ExameTipoId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialEquipamentoAssociadoId")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoSolicitanteId")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ProfissionalExecutanteId")
                        .HasColumnType("int");

                    b.Property<int?>("SalaDeExameId")
                        .HasColumnType("int");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("ExameId");

                    b.HasIndex("ExameTipoId");

                    b.HasIndex("MaterialEquipamentoAssociadoId");

                    b.HasIndex("MedicoSolicitanteId");

                    b.HasIndex("ProfissionalExecutanteId");

                    b.HasIndex("SalaDeExameId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("HealthWellBeing.Models.Utente", b =>
                {
                    b.Property<int>("UtenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtenteId"));

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Genero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Morada")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeEmergencia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumCC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroEmergencia")
                        .HasColumnType("int");

                    b.Property<int>("UtenteSNS")
                        .HasColumnType("int");

                    b.HasKey("UtenteId");

                    b.ToTable("Utentes");
                });

            modelBuilder.Entity("HealthWellbeing.Models.ExameTipo", b =>
                {
                    b.Property<int>("ExameTipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExameTipoId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ExameTipoId1")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExameTipoId");

                    b.HasIndex("ExameTipoId1");

                    b.ToTable("ExameTipo");
                });

            modelBuilder.Entity("HealthWellbeing.Models.MaterialEquipamentoAssociado", b =>
                {
                    b.Property<int>("MaterialEquipamentoAssociadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialEquipamentoAssociadoId"));

                    b.Property<string>("EstadoComponente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeEquipamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("MaterialEquipamentoAssociadoId");

                    b.ToTable("MaterialEquipamentoAssociado");
                });

            modelBuilder.Entity("HealthWellbeing.Models.Medicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("HealthWellbeing.Models.ProfissionalExecutante", b =>
                {
                    b.Property<int>("ProfissionalExecutanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfissionalExecutanteId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProfissionalExecutanteId1")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ProfissionalExecutanteId");

                    b.HasIndex("ProfissionalExecutanteId1");

                    b.ToTable("ProfissionalExecutante");
                });

            modelBuilder.Entity("HealthWellbeing.Models.SalaDeExames", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaId"));

                    b.Property<string>("Laboratorio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoSala")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SalaId");

                    b.ToTable("SalaDeExame");
                });

            modelBuilder.Entity("HealthWellBeing.Models.Exame", b =>
                {
                    b.HasOne("HealthWellbeing.Models.ExameTipo", "ExameTipo")
                        .WithMany()
                        .HasForeignKey("ExameTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthWellbeing.Models.MaterialEquipamentoAssociado", "MaterialEquipamentoAssociado")
                        .WithMany()
                        .HasForeignKey("MaterialEquipamentoAssociadoId");

                    b.HasOne("HealthWellbeing.Models.Medicos", "MedicoSolicitante")
                        .WithMany()
                        .HasForeignKey("MedicoSolicitanteId");

                    b.HasOne("HealthWellbeing.Models.ProfissionalExecutante", "ProfissionalExecutante")
                        .WithMany()
                        .HasForeignKey("ProfissionalExecutanteId");

                    b.HasOne("HealthWellbeing.Models.SalaDeExames", "SalaDeExame")
                        .WithMany()
                        .HasForeignKey("SalaDeExameId");

                    b.HasOne("HealthWellBeing.Models.Utente", "Utente")
                        .WithMany("Exames")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExameTipo");

                    b.Navigation("MaterialEquipamentoAssociado");

                    b.Navigation("MedicoSolicitante");

                    b.Navigation("ProfissionalExecutante");

                    b.Navigation("SalaDeExame");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("HealthWellbeing.Models.ExameTipo", b =>
                {
                    b.HasOne("HealthWellbeing.Models.ExameTipo", null)
                        .WithMany("exametipo")
                        .HasForeignKey("ExameTipoId1");
                });

            modelBuilder.Entity("HealthWellbeing.Models.ProfissionalExecutante", b =>
                {
                    b.HasOne("HealthWellbeing.Models.ProfissionalExecutante", null)
                        .WithMany("profissionalExecutantes")
                        .HasForeignKey("ProfissionalExecutanteId1");
                });

            modelBuilder.Entity("HealthWellBeing.Models.Utente", b =>
                {
                    b.Navigation("Exames");
                });

            modelBuilder.Entity("HealthWellbeing.Models.ExameTipo", b =>
                {
                    b.Navigation("exametipo");
                });

            modelBuilder.Entity("HealthWellbeing.Models.ProfissionalExecutante", b =>
                {
                    b.Navigation("profissionalExecutantes");
                });
#pragma warning restore 612, 618
        }
    }
}
