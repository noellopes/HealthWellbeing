@model HealthWellbeing.Models.TipoExercicio

@{
    ViewData["Title"] = "Create";
}

<h1 class="mb-4">Criar Tipo de Exercício</h1>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-body">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="mb-3">
                        <label asp-for="NomeTipoExercicios" class="form-label"></label>
                        <input asp-for="NomeTipoExercicios" class="form-control" placeholder="Nome do exercício" />
                        <span asp-validation-for="NomeTipoExercicios" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="DescricaoTipoExercicios" class="form-label"></label>
                        <input asp-for="DescricaoTipoExercicios" class="form-control" placeholder="Descrição do exercício" />
                        <span asp-validation-for="DescricaoTipoExercicios" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="CaracteristicasTipoExercicios" class="form-label"></label>
                        <input asp-for="CaracteristicasTipoExercicios" class="form-control" placeholder="Nível de dificuldade" />
                        <span asp-validation-for="CaracteristicasTipoExercicios" class="text-danger"></span>
                    </div>

                    <div class="mb-4">
                        <label class="form-label fw-bold">Benefícios</label>
                        <div class="border rounded p-3 bg-light" style="max-height: 200px; overflow-y: auto;">
                            @{
                                var beneficios = ViewData["Beneficios"] as List<HealthWellbeing.Models.Beneficio>;
                                if (beneficios != null && beneficios.Any())
                                {
                                    foreach (var beneficio in beneficios)
                                    {
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="checkbox"
                                                   name="beneficiosSelecionados"
                                                   value="@beneficio.BeneficioId"
                                                   id="beneficio_@beneficio.BeneficioId" />
                                            <label class="form-check-label" for="beneficio_@beneficio.BeneficioId">
                                                @beneficio.Nome
                                            </label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted"><em>A lista de benefícios está vazia.</em></p>
                                }
                            }
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a asp-action="Index" class="btn btn-secondary">Voltar</a>
                        <button type="submit" class="btn btn-primary">Criar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
